<tool id="trinity_psc" name="Trinity" version="2.4.0">

    <!-- Written by Jeremy Goecks, now maintained here by bhaas and additional
         modifications by Nate Coraor -->
    <description>De novo assembly of RNA-Seq data Using Trinity on PSC's Bridges</description>
    <requirements>
        <!-- These are versions available as modules on Bridges -->
        <requirement type="package" version="2.4.0">trinity</requirement>
        <requirement type="package" version="2.3.2">bowtie2</requirement>
    </requirements>
    <command detect_errors="aggressive">
        <![CDATA[
        MEM=`expr \${GALAXY_SLOTS:-4} \* \${CORE_MEMORY:-1} - \${CORE_MEMORY:-1}` ;
        workdir=`pwd`;
        echo "workdir is \$workdir";
        if [ ! -z \$LOCAL ] ; then
            cd \$LOCAL ;
        fi ;
        echo "Running Trinity from `pwd`";

        Trinity --no_version_check
                --max_memory "\${MEM}G"
                --CPU "\${GALAXY_SLOTS:-16}"
                --bflyHeapSpaceMax "\${MEM}G"
                ## Butterfly uses this value for stack size as well, and runs out of memory if the value is too low.
                --bflyHeapSpaceInit "\${MEM}G"
                --bflyGCThreads "6"

        $additional_params.normalize_reads

        ## Inputs.
        #if str($inputs.paired_or_single) == "paired":
            --left "${ '","'.join(str($inputs.left_input).split(',')) }"
            --right "${ '","'.join(str($inputs.right_input).split(',')) }"
            #if $inputs.left_input.ext == 'fa':
                --seqType fa
            #else:
                --seqType fq
            #end if
            --group_pairs_distance $inputs.group_pairs_distance $inputs.jaccard_clip
        #else:
            --single "$inputs.input"
            #if  str($inputs.input.ext) == 'fa':
                --seqType fa
            #else:
                --seqType fq
            #end if
        #end if

        --SS_lib_type $inputs.library_type

        ## Additional parameters.
        #if $additional_params.min_contig_length:
            --min_contig_length $additional_params.min_contig_length
        #end if
        #if $additional_params.long_reads:
            --long_reads $additional_params.long_reads
        #end if
        #if $additional_params.guided.is_guided == "yes":
            --genome_guided_bam $additional_params.guided.genome_guided_bam

            #if $additional_params.guided.genome_guided_min_coverage:
                --genome_guided_min_coverage $additional_params.guided.genome_guided_min_coverage
            #end if

            #if $additional_params.guided.genome_guided_min_reads_per_partition:
                --genome_guided_min_reads_per_partition $additional_params.guided.genome_guided_min_reads_per_partition
            #end if

        #end if

        #if $additional_params.min_kmer_cov:
            --min_kmer_cov $additional_params.min_kmer_cov
        #end if

        #if $additional_params.max_reads_per_graph:
            --max_reads_per_graph $additional_params.max_reads_per_graph
        #end if

        --bfly_opts '-V 10 --stderr'

        ## if Trinity fails, touch the output file for Pulsar

        || (ec=\$? ; mkdir -p trinity_out_dir ; touch trinity_out_dir/Trinity.fasta ; exit \$ec) ;

        if [ ! -z \$LOCAL ] ; then
            mkdir -p "\$workdir/trinity_out_dir";
            cp -p trinity_out_dir/Trinity* "\$workdir/trinity_out_dir";
            cd "\$workdir";
        fi ;

        ]]>
    </command>
    <inputs>
        <conditional name="inputs">
            <param name="paired_or_single" type="select" label="Paired or Single-end data?">
                <option value="paired">Paired</option>
                <option value="single">Single</option>
            </param>
            <when value="paired">
                <param format="fasta,fastq" name="left_input" type="data" label="Left/Forward strand reads" help=""/>
                <param format="fasta,fastq" name="right_input" type="data" label="Right/Reverse strand reads" help=""/>
                <param name="library_type" type="select" label="Strand-specific Library Type">
                    <option value="">Not strand-specific</option>
                    <option value="FR">FR</option>
                    <option value="RF">RF</option>
                </param>
                <param name="group_pairs_distance" type="integer" value="500" min="1" label="Group pairs distance" help="Maximum length expected between fragment pairs"/>
                <param name="path_reinforcement_distance" type="integer" value="75" min="1" label="Path reinforcement distance" help="Minimum read overlap required for path extension in the graph" />
                <param name="jaccard_clip" argument="--jaccard_clip" type="boolean" truevalue="--jaccard_clip" falsevalue="" checked="false" label="Jaccard Clip options" help="set if you expect high gene density with UTR overlap"/>
            </when>
            <when value="single">
                <param format="fasta,fastq" name="input" type="data" label="Single-end reads" help=""/>
                <param name="library_type" type="select" label="Strand-specific Library Type">
                    <option value="">Not strand-specific</option>
                    <option value="F">F</option>
                    <option value="R">R</option>
                </param>
                <param name="path_reinforcement_distance" type="integer" value="40" min="1" label="Path reinforcement distance" help="Minimum read overlap required for path extension in the graph" />
            </when>
        </conditional>
        <section name="additional_params" title="Additional Options" expanded="False">
            <param name="min_contig_length" argument="--min_contig_length" type="integer" optional="true" value="200" min="1" label="Minimum Contig Length" help="All contigs shorter than this will be discarded"/>

            <conditional name="guided">
                <param name="is_guided" type="select" label="Use the genome guided mode?" help="If you already mapped the reads to the genome, Trinity can use this information">
                    <option value="no">No</option>
                    <option value="yes">Yes</option>
                 </param>
                <when value="no">
                </when>
                <when value="yes">
                    <param format="bam" name="genome_guided_bam" argument="--genome_guided_bam" type="data" label="Coordinate-sorted BAM file" />
                    <param name="genome_guided_min_coverage" argument="--genome_guided_min_coverage" type="integer" optional="true" value="1" min="1" label="Minimum read coverage for identifying an expressed region of the genome"/>
                    <param name="genome_guided_min_reads_per_partition" argument="--genome_guided_min_reads_per_partition" type="integer" optional="true" value="10" min="1" label="Minimum number of reads per partition"/>
                </when>
            </conditional>

            <param format="fasta" name="long_reads" argument="--long_reads" type="data" optional="true" label="Error-corrected or circular consensus (CCS) pac bio reads" help="Experimental feature! Long reads must be in the same orientation as short reads if they are strand specific"/>

            <param name="min_kmer_cov" argument="--min_kmer_cov" type="integer" optional="true" value="1" min="1" label="Minimum count for K-mers to be assembled"/>
            <param name="max_reads_per_graph" type="integer" value="20000000" min="10000" label="chrysalis_max_reads_per_graph" help="Maximum number of reads to be anchored within each transcript graph by Chrysalis" />
            <param argument="--normalize_reads" type="boolean" truevalue="--normalize_reads" falsevalue="" help="Normalize reads, can decrease runtime and memory requirements for datasets exceeding 300M pairs"/>
        </section>

    </inputs>
    <outputs>
        <data format="txt" name="trinity_log" label="${tool.name} on ${on_string}: log" />
        <data format="fasta" name="assembled_transcripts" label="${tool.name} on ${on_string}: Assembled Transcripts" from_work_dir="trinity_out_dir/Trinity.fasta"/>
    </outputs>
    <tests>
        <test>
            <param name="paired_or_single" value="paired"/>
            <param name="left_input" value="reads.left.fq" ftype="fastqsanger"/>
            <param name="right_input" value="reads.right.fq" ftype="fastqsanger"/>
            <param name="is_strand_specific" value="true"/>
            <param name="normalize_reads" value="false"/>
            <param name="library_type" value="RF"/>
            <output name="assembled_transcripts" file="raw.fasta" compare="sim_size" delta="500" />
        </test>
        <test>
            <param name="paired_or_single" value="paired"/>
            <param name="left_input" value="reads.left.fq" ftype="fastqsanger"/>
            <param name="right_input" value="reads.right.fq" ftype="fastqsanger"/>
            <param name="is_strand_specific" value="true"/>
            <param name="normalize_reads" value="true"/>
            <param name="library_type" value="RF"/>
            <output name="assembled_transcripts" file="norm.fasta" compare="sim_size" delta="500" />
        </test>
    </tests>
    <help>
Trinity is a de novo transcript assembler that uses RNA-seq data as input. This tool runs all Trinity_ commands--Inchworm, Chrysalis, and Butterfly--in a single pass.  This version of Trinity runs on Bridges_ at the `Pittsburgh Supercomputing Center`_ using a version of Trinity 2.2.0 optimized for the unique memory profile of that system.

.. _Trinity: http://trinityrnaseq.github.io
.. _Pittsburgh Supercomputing Center: http://www.psc.edu
.. _Bridges: http://www.psc.edu/bridges
    </help>
    <citations>
        <citation type="doi">10.1038/nbt.1883</citation>
    </citations>
</tool>
