<tool id="data_manager_fetch_genome_all_fasta" name="Reference Genome" version="0.0.1" tool_type="manage_data">
    <description>fetching</description>
    <command interpreter="python">data_manager_fetch_genome_all_fasta.py "${out_file}" --dbkey_description ${ dbkey.get_display_text() }</command>
    <inputs>
        <param name="dbkey" type="genomebuild" label="DBKEY to assign to data" />
        <param type="text" name="sequence_name" value="" label="Name of sequence" />
        <param type="text" name="sequence_desc" value="" label="Description of sequence" />
        <param type="text" name="sequence_id" value="" label="ID for sequence" />
        <conditional name="reference_source">
          <param name="reference_source_selector" type="select" label="Choose the source for the reference genome">
            <option value="ucsc" selected="True">UCSC</option>
            <option value="ncbi">NCBI</option>
            <option value="url">URL</option>
            <option value="history">History</option>
            <option value="directory">Directory on Server</option>
          </param>
          <when value="ucsc">
            <param type="text" name="requested_dbkey" value="" label="UCSC's DBKEY for source FASTA" optional="False" />
          </when>
          <when value="ncbi">
            <param type="text" name="requested_identifier" value="" label="NCBI identifier" optional="False" />
          </when>
          <when value="url">
            <param type="text" area="True" name="user_url" value="http://" label="URLs" optional="False" />
          </when>
          <when value="history">
            <param name="input_fasta" type="data" format="fasta" label="FASTA File" multiple="False" optional="False" />
          </when>
          <when value="directory">
            <param type="text" name="fasta_filename" value="" label="Full path to FASTA File on disk" optional="False" />
            <param type="boolean" name="create_symlink" truevalue="create_symlink" falsevalue="copy_file" label="Create symlink to orignal data instead of copying" checked="False" />
          </when>
        </conditional>
        <conditional name="sorting">
          <param name="sort_selector" type="select" label="Sort by chromosome name">
            <option value="as_is" selected="True">As is</option>
            <option value="lexicographical">Lexicographical</option>
            <option value="gatk">GATK</option>
            <option value="custom">Custom</option>
          </param>
          <when value="as_is">
          </when>
          <when value="lexicographical">
          </when>
          <when value="gatk">
          </when>
          <when value="custom">
            <repeat name="sequence_identifiers" title="Sequence Identifiers" min="1" default="1">
                <param type="text" name="identifier" value="" label="Sequence Identifier" optional="False" />
            </repeat>
            <conditional name="handle_not_listed">
                <param name="handle_not_listed_selector" type="select" label="How to handle non-specified Identifiers">
                    <option value="discard" selected="True">Discard</option>
                    <option value="keep_append">Keep and Append</option>
                    <option value="keep_prepend">Keep and Prepend</option>
                </param>
                <when value="discard">
                </when>
                <when value="keep_append">
                </when>
                <when value="keep_prepend">
                </when>
            </conditional>
          </when>
        </conditional>
    </inputs>
    <outputs>
        <data name="out_file" format="data_manager_json"/>
    </outputs>
    <tests>
        <!-- TODO: need some way to test that new entry was added to data table -->
        <test>
            <param name="dbkey" value="anoGam1"/>
            <param name="sequence_name" value=""/>
            <param name="sequence_desc" value=""/>
            <param name="sequence_id" value=""/>
            <param name="reference_source_selector" value="history"/>
            <param name="input_fasta" value="phiX174.fasta"/>
            <param name="sort_selector" value="as_is"/>
            <output name="out_file" file="phiX174_as_anoGam1.data_manager_json"/>
        </test>
    </tests>
    <help>
**What it does**

Fetches a reference genome from various sources (UCSC, NCBI, URL, Galaxy History, or a server directory) and populates the "all_fasta" data table.

------



.. class:: infomark

**Notice:** If you leave name, description, or id blank, it will be generated automatically. 

    </help>
</tool>
