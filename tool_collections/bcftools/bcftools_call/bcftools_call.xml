<?xml version="1.0"?>
<tool id="bcftools_call" name="BCFtools call" version="1.0.0">
    <description>SNPs and indels</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements" />
    <expand macro="stdio" />
    <expand macro="version_command" />
    <command>
        <![CDATA[
            @INPUT_FORMAT@
            bcftools index ${input} &&  
            bcftools call 
            -o "${output}"
            -O ${output_format}
            #if str($filter_calls.filter_calls_selector) == 'regions':
                -R "${input_regions}"
            #else if str($filter_calls.filter_calls_selector) == 'samples':
                -S "${input_regions}"
                ${output_ploidy}
            #else if str($filter_calls.filter_calls_selector) == 'targets':
                -T "${input_regions}"
            #end if
            ${caller} ${variants_only} ${skip_indels_snps} ${input}
        ]]>
    </command>
    <inputs>
        <expand macro="vcf_input" />
        <expand macro="filter_conditional" />
        <expand macro="output_format_selector" />
        <param label="Caller" name="caller" type="select">
            <option value="-c">Consensus (-c)</option>
            <option value="-m">Multiallelic (-m)</option>
        </param>
        <param help="(-C)" label="Constraint" name="constraint" type="select">
            <option value="-C alleles">Alleles</option>
            <option value="-C trio">Trio</option>
        </param>
        <param falsevalue="" help="(-v)" label="Output variants only" name="variants_only" truevalue="-v" type="boolean" />
        <param help="(-V)" label="Skip" name="skip_indels_snps" type="select">
            <option selected="True" value="">Do not skip</option>
            <option value="-V indels">Indels</option>
            <option value="-V snps">SNPs</option>
        </param>
    </inputs>
    <outputs>
        <expand macro="output_dataset" />
    </outputs>
    <tests>
        <test>
            <param ftype="vcf" name="input" value="bcftools_call_in1.vcf" />
            <param name="output_format" value="v" />
            <param name="variants_only" value="True" />
            <param name="caller" value="-m" />
            <output file="bcftools_call_out1.vcf" ftype="vcf" lines_diff="2" name="output" />
        </test>
    </tests>
    <help>
        <![CDATA[
        BCFtools is a set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed.

        Most commands accept VCF, bgzipped VCF and BCF with filetype detected automatically even when streaming from a pipe. Indexed VCF and BCF will work in all situations. Un-indexed VCF and BCF and streams will work in most, but not all situations.

        This command replaces the former bcftools view caller. Some of the original functionality has been temporarily lost in the process of transition under htslib, but will be added back on popular demand. The original calling model can be invoked with the -c option.

        File format options:
            -o, --output <file>             write output to a file [standard output]
            -O, --output-type <b|u|z|v>     output type: 'b' compressed BCF; 'u' uncompressed BCF; 'z' compressed VCF; 'v' uncompressed VCF [v]
            -r, --regions <region>          restrict to comma-separated list of regions
            -R, --regions-file <file>       restrict to regions listed in a file
            -s, --samples <list>            list of samples to include [all samples]
            -S, --samples-file <file>       PED file or a file with optional second column for ploidy (0, 1 or 2) [all samples]
            -t, --targets <region>          similar to -r but streams rather than index-jumps
            -T, --targets-file <file>       similar to -R but streams rather than index-jumps

        Input/output options:
            -A, --keep-alts                 keep all possible alternate alleles at variant sites
            -f, --format-fields <list>      output format fields: GQ,GP (lowercase allowed) []
            -g, --gvcf <minDP>              output gVCF blocks of homozygous REF calls
            -i, --insert-missed             output also sites missed by mpileup but present in -T
            -M, --keep-masked-ref           keep sites with masked reference allele (REF=N)
            -V, --skip-variants <type>      skip indels/snps
            -v, --variants-only             output variant sites only

        Consensus/variant calling options:
            -c, --consensus-caller          the original calling method (conflicts with -m)
            -C, --constrain <str>           one of: alleles, trio (see manual)
            -m, --multiallelic-caller       alternative model for multiallelic and rare-variant calling (conflicts with -c)
            -n, --novel-rate <float>,[...]  likelihood of novel mutation for constrained trio calling, see man page for details [1e-8,1e-9,1e-9]
            -p, --pval-threshold <float>    variant if P(ref|D)<FLOAT with -c [0.5]
            -P, --prior <float>             mutation rate (use bigger for greater sensitivity) [1.1e-3]
            -X, --chromosome-X              haploid output for male samples (requires PED file with -s)
            -Y, --chromosome-Y              haploid output for males and skips females (requires PED file with -s)
        ]]>
    </help>
    <expand macro="citations" />
</tool>
