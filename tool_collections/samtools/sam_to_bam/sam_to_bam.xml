<tool id="sam_to_bam" name="SAM-to-BAM" version="1.1.6">
    <description>converts SAM format to BAM format</description>
    <requirements>
        <requirement type="package" version="1.1">samtools</requirement>
    </requirements>
    <stdio>
        <exit_code range="1:" level="fatal" description="Error" />
    </stdio>
    <command>
<![CDATA[
    samtools sort -O bam -@ \${GALAXY_SLOTS:-1} "$input1" -o sorted_input.bam -T temp && 
      #if $source.index_source == "history":
        ln -s $source.ref_file input.fa &&
        samtools faidx input.fa &&
      #else
        ln -s ${source.index.fields.path} input.fa &&
        ln -s ${source.index.fields.path}.fai input.fa.fai &&
      #end if
      samtools view -T input.fa sorted_input.bam -b -h -o $output1
]]>
    </command>
    <inputs>
        <conditional name="source">
            <param label="Choose the source for the reference list" name="index_source" type="select">
                <option value="cached">Locally cached</option>
                <option value="history">History</option>
            </param>
            <when value="cached">
                <param format="sam" label="SAM file to convert" metadata_name="dbkey" name="input1" type="data">
                    <validator type="unspecified_build" />
                    <validator message="Sequences are not currently available for the specified build." metadata_column="1" metadata_name="dbkey" table_name="fasta_indexes" type="dataset_metadata_in_data_table" />
                </param>
                <param label="Using reference genome" name="index" type="select">
                    <options from_data_table="fasta_indexes">
                        <filter column="1" key="dbkey" ref="input1" type="data_meta" />
                        <validator message="No reference genome is available for the build associated with the selected input dataset" type="no_options" />
                    </options>
                </param>
            </when>
            <when value="history">
                <param format="sam" label="SAM file to convert" name="input1" type="data" />
                <param format="fasta" label="Using reference file" metadata_name="dbkey" name="ref_file" type="data" />
            </when>
        </conditional>
    </inputs>
    <outputs>
        <data format="bam" label="${tool.name} on ${on_string}: converted BAM" name="output1">
            <actions>
                <conditional name="source.index_source">
                    <when value="cached">
                        <action name="dbkey" type="metadata">
                            <option name="source.input1" param_attribute="dbkey" type="from_param" />
                        </action>
                    </when>
                    <when value="history">
                        <action name="dbkey" type="metadata">
                            <option name="source.ref_file" param_attribute="dbkey" type="from_param" />
                        </action>
                    </when>
                </conditional>
            </actions>
        </data>
    </outputs>
    <tests>
        <test>
            <param name="index_source" value="history" />
            <param ftype="sam" name="input1" value="sam_to_bam_in1.sam" />
            <param dbkey="equCab2" ftype="fasta" name="ref_file" value="chr_m.fasta" />
            <output file="sam_to_bam_out1.bam" ftype="bam" name="output1" />
        </test>
        <test>
            <param name="index_source" value="cached" />
            <param dbkey="chrM" ftype="sam" name="input1" value="sam_to_bam_in1.sam" />
            <param name="index" value="chr_m" />
            <output file="sam_to_bam_out2.bam" ftype="bam" name="output1" />
        </test>
    </tests>
    <help>
<![CDATA[
**What it does**

This tool uses the SAMTools_ toolkit to produce an indexed BAM file based on a sorted input SAM file.

.. _SAMTools: http://samtools.sourceforge.net/samtools.shtml
]]>
    </help>
    <citations>
        <citation type="doi">10.1093/bioinformatics/btp352</citation>
    </citations>
</tool>
